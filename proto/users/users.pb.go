// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/users/users.proto

package go_micro_api_user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PersonId                   string   `protobuf:"bytes,2,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	PersonName                 string   `protobuf:"bytes,3,opt,name=person_name,json=personName,proto3" json:"person_name,omitempty"`
	PersonInitials             string   `protobuf:"bytes,4,opt,name=person_initials,json=personInitials,proto3" json:"person_initials,omitempty"`
	OrgFunctionId              int32    `protobuf:"varint,5,opt,name=org_function_id,json=orgFunctionId,proto3" json:"org_function_id,omitempty"`
	PersonPosition             string   `protobuf:"bytes,6,opt,name=person_position,json=personPosition,proto3" json:"person_position,omitempty"`
	PersonDateRegistered       int64    `protobuf:"varint,7,opt,name=person_date_registered,json=personDateRegistered,proto3" json:"person_date_registered,omitempty"`
	PersonSubscriptionFinish   int64    `protobuf:"varint,8,opt,name=person_subscription_finish,json=personSubscriptionFinish,proto3" json:"person_subscription_finish,omitempty"`
	PersonEmail                string   `protobuf:"bytes,9,opt,name=person_email,json=personEmail,proto3" json:"person_email,omitempty"`
	PersonTelephone            string   `protobuf:"bytes,10,opt,name=person_telephone,json=personTelephone,proto3" json:"person_telephone,omitempty"`
	PersonFax                  string   `protobuf:"bytes,11,opt,name=person_fax,json=personFax,proto3" json:"person_fax,omitempty"`
	PersonAddress              string   `protobuf:"bytes,12,opt,name=person_address,json=personAddress,proto3" json:"person_address,omitempty"`
	CategoryId                 int32    `protobuf:"varint,13,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	PersonMainHiredCompany     string   `protobuf:"bytes,14,opt,name=person_main_hired_company,json=personMainHiredCompany,proto3" json:"person_main_hired_company,omitempty"`
	PersonContractorDepartment string   `protobuf:"bytes,15,opt,name=person_contractor_department,json=personContractorDepartment,proto3" json:"person_contractor_department,omitempty"`
	PersonSubcontractor        string   `protobuf:"bytes,16,opt,name=person_subcontractor,json=personSubcontractor,proto3" json:"person_subcontractor,omitempty"`
	PersonPassword             string   `protobuf:"bytes,17,opt,name=person_password,json=personPassword,proto3" json:"person_password,omitempty"`
	PersonIsOnline             int32    `protobuf:"varint,18,opt,name=person_is_online,json=personIsOnline,proto3" json:"person_is_online,omitempty"`
	IsActive                   int32    `protobuf:"varint,19,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	IsDeleted                  int32    `protobuf:"varint,20,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb78b70ef3ad6f73, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetPersonId() string {
	if m != nil {
		return m.PersonId
	}
	return ""
}

func (m *User) GetPersonName() string {
	if m != nil {
		return m.PersonName
	}
	return ""
}

func (m *User) GetPersonInitials() string {
	if m != nil {
		return m.PersonInitials
	}
	return ""
}

func (m *User) GetOrgFunctionId() int32 {
	if m != nil {
		return m.OrgFunctionId
	}
	return 0
}

func (m *User) GetPersonPosition() string {
	if m != nil {
		return m.PersonPosition
	}
	return ""
}

func (m *User) GetPersonDateRegistered() int64 {
	if m != nil {
		return m.PersonDateRegistered
	}
	return 0
}

func (m *User) GetPersonSubscriptionFinish() int64 {
	if m != nil {
		return m.PersonSubscriptionFinish
	}
	return 0
}

func (m *User) GetPersonEmail() string {
	if m != nil {
		return m.PersonEmail
	}
	return ""
}

func (m *User) GetPersonTelephone() string {
	if m != nil {
		return m.PersonTelephone
	}
	return ""
}

func (m *User) GetPersonFax() string {
	if m != nil {
		return m.PersonFax
	}
	return ""
}

func (m *User) GetPersonAddress() string {
	if m != nil {
		return m.PersonAddress
	}
	return ""
}

func (m *User) GetCategoryId() int32 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *User) GetPersonMainHiredCompany() string {
	if m != nil {
		return m.PersonMainHiredCompany
	}
	return ""
}

func (m *User) GetPersonContractorDepartment() string {
	if m != nil {
		return m.PersonContractorDepartment
	}
	return ""
}

func (m *User) GetPersonSubcontractor() string {
	if m != nil {
		return m.PersonSubcontractor
	}
	return ""
}

func (m *User) GetPersonPassword() string {
	if m != nil {
		return m.PersonPassword
	}
	return ""
}

func (m *User) GetPersonIsOnline() int32 {
	if m != nil {
		return m.PersonIsOnline
	}
	return 0
}

func (m *User) GetIsActive() int32 {
	if m != nil {
		return m.IsActive
	}
	return 0
}

func (m *User) GetIsDeleted() int32 {
	if m != nil {
		return m.IsDeleted
	}
	return 0
}

type Response struct {
	Created              bool     `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated              bool     `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted              bool     `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
	User                 *User    `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Users                []*User  `protobuf:"bytes,5,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb78b70ef3ad6f73, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func (m *Response) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Response) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Response) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "go.micro.api.user.User")
	proto.RegisterType((*Response)(nil), "go.micro.api.user.Response")
}

func init() { proto.RegisterFile("proto/users/users.proto", fileDescriptor_bb78b70ef3ad6f73) }

var fileDescriptor_bb78b70ef3ad6f73 = []byte{
	// 637 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdf, 0x4f, 0x53, 0x31,
	0x14, 0x76, 0x1b, 0x83, 0xed, 0xf0, 0xbb, 0x10, 0xa9, 0x80, 0x71, 0x92, 0xa8, 0x33, 0xc6, 0x19,
	0xd1, 0x17, 0x13, 0x1f, 0x44, 0x26, 0x4a, 0x8c, 0x4a, 0x86, 0xf8, 0x7a, 0x53, 0x6e, 0x0f, 0xa3,
	0xc9, 0xd6, 0xde, 0xb4, 0x1d, 0xc2, 0x1f, 0xe0, 0x7f, 0x64, 0xfc, 0xfb, 0x4c, 0x4f, 0x7b, 0xc7,
	0x0c, 0xea, 0x03, 0xbc, 0x2c, 0xe9, 0xf7, 0x7d, 0xe7, 0x5b, 0xcf, 0xd7, 0x73, 0x2e, 0xac, 0x15,
	0xd6, 0x78, 0xf3, 0x6c, 0xe4, 0xd0, 0xba, 0xf8, 0xdb, 0x21, 0x84, 0x2d, 0xf7, 0x4d, 0x67, 0xa8,
	0x72, 0x6b, 0x3a, 0xa2, 0x50, 0x9d, 0xc0, 0x6c, 0xfd, 0x9a, 0x86, 0xa9, 0x23, 0x87, 0x96, 0x2d,
	0x40, 0x55, 0x49, 0x5e, 0x69, 0x55, 0xda, 0xcd, 0x5e, 0x55, 0x49, 0xb6, 0x01, 0xcd, 0x02, 0xad,
	0x33, 0x3a, 0x53, 0x92, 0x57, 0x09, 0x6e, 0x44, 0x60, 0x5f, 0xb2, 0x7b, 0x30, 0x9b, 0x48, 0x2d,
	0x86, 0xc8, 0x6b, 0x44, 0x43, 0x84, 0x3e, 0x8b, 0x21, 0xb2, 0x47, 0xb0, 0x58, 0x56, 0x6b, 0xe5,
	0x95, 0x18, 0x38, 0x3e, 0x45, 0xa2, 0x85, 0xe4, 0x91, 0x50, 0xf6, 0x10, 0x16, 0x8d, 0xed, 0x67,
	0x27, 0x23, 0x9d, 0x7b, 0x15, 0xff, 0xac, 0xde, 0xaa, 0xb4, 0xeb, 0xbd, 0x79, 0x63, 0xfb, 0x7b,
	0x09, 0xdd, 0x97, 0x13, 0x86, 0x85, 0x71, 0x2a, 0x80, 0x7c, 0x7a, 0xd2, 0xf0, 0x20, 0xa1, 0xec,
	0x25, 0xdc, 0x4e, 0x42, 0x29, 0x3c, 0x66, 0x16, 0xfb, 0xca, 0x79, 0xb4, 0x28, 0xf9, 0x4c, 0xab,
	0xd2, 0xae, 0xf5, 0x56, 0x23, 0xdb, 0x15, 0x1e, 0x7b, 0x63, 0x8e, 0xbd, 0x86, 0xf5, 0x54, 0xe5,
	0x46, 0xc7, 0x2e, 0xb7, 0xaa, 0xa0, 0xdb, 0x9c, 0x28, 0xad, 0xdc, 0x29, 0x6f, 0x50, 0x25, 0x8f,
	0x8a, 0xc3, 0x09, 0xc1, 0x1e, 0xf1, 0xec, 0x3e, 0xcc, 0xa5, 0x6a, 0x1c, 0x0a, 0x35, 0xe0, 0x4d,
	0xba, 0x59, 0x8a, 0xe8, 0x5d, 0x80, 0xd8, 0x63, 0x58, 0x4a, 0x12, 0x8f, 0x03, 0x2c, 0x4e, 0x8d,
	0x46, 0x0e, 0x24, 0x4b, 0x7d, 0x7d, 0x2d, 0x61, 0x76, 0x17, 0x52, 0x92, 0xd9, 0x89, 0x38, 0xe7,
	0xb3, 0x24, 0x4a, 0x6f, 0xb1, 0x27, 0xce, 0xd9, 0x03, 0x48, 0x2d, 0x67, 0x42, 0x4a, 0x8b, 0xce,
	0xf1, 0x39, 0x92, 0xcc, 0x47, 0x74, 0x27, 0x82, 0xe1, 0x89, 0x72, 0xe1, 0xb1, 0x6f, 0xec, 0x45,
	0x08, 0x75, 0x9e, 0x42, 0x85, 0x12, 0xda, 0x97, 0xec, 0x15, 0xdc, 0x49, 0x3e, 0x43, 0xa1, 0x74,
	0x76, 0xaa, 0x2c, 0xca, 0x2c, 0x37, 0xc3, 0x42, 0xe8, 0x0b, 0xbe, 0x40, 0x96, 0x29, 0xc9, 0x4f,
	0x42, 0xe9, 0x0f, 0x81, 0xde, 0x8d, 0x2c, 0x7b, 0x03, 0x9b, 0xa9, 0x34, 0x37, 0xda, 0x5b, 0x91,
	0x7b, 0x63, 0x33, 0x89, 0x85, 0xb0, 0x7e, 0x88, 0xda, 0xf3, 0x45, 0xaa, 0x4e, 0x89, 0xee, 0x8e,
	0x25, 0xdd, 0xb1, 0x82, 0x3d, 0x87, 0xd5, 0xcb, 0xbc, 0x2f, 0x4d, 0xf8, 0x12, 0x55, 0xae, 0x8c,
	0x93, 0xbe, 0xa4, 0x26, 0x27, 0x40, 0x38, 0xf7, 0xdd, 0x58, 0xc9, 0x97, 0xff, 0x98, 0x80, 0x84,
	0xb2, 0xf6, 0x38, 0x6a, 0xe5, 0x32, 0xa3, 0x07, 0x4a, 0x23, 0x67, 0xd4, 0x7e, 0x39, 0x7c, 0xee,
	0x0b, 0xa1, 0x61, 0xc6, 0x95, 0xcb, 0x44, 0xee, 0xd5, 0x19, 0xf2, 0x15, 0x92, 0x34, 0x94, 0xdb,
	0xa1, 0x73, 0x78, 0x06, 0xe5, 0x32, 0x89, 0x03, 0xf4, 0x28, 0xf9, 0x2a, 0xb1, 0x4d, 0xe5, 0xba,
	0x11, 0xd8, 0xfa, 0x59, 0x81, 0x46, 0x0f, 0x5d, 0x61, 0xb4, 0x43, 0xc6, 0x61, 0x26, 0xb7, 0x28,
	0x82, 0x30, 0x6c, 0x50, 0xa3, 0x57, 0x1e, 0x03, 0x33, 0x2a, 0x24, 0x31, 0xd5, 0xc8, 0xa4, 0x63,
	0x60, 0x4a, 0xf3, 0x5a, 0x64, 0xd2, 0x91, 0x3d, 0x81, 0xa9, 0xb0, 0x9b, 0xb4, 0x31, 0xb3, 0xdb,
	0x6b, 0x9d, 0x2b, 0x5b, 0xdb, 0x09, 0x1b, 0xdb, 0x23, 0x11, 0x7b, 0x0a, 0x75, 0x5a, 0x71, 0x5e,
	0x6f, 0xd5, 0xfe, 0xa7, 0x8e, 0xaa, 0xed, 0x1f, 0x35, 0x98, 0x0b, 0x67, 0x77, 0x88, 0xf6, 0x4c,
	0xe5, 0xc8, 0xba, 0x00, 0xbb, 0x74, 0x57, 0xfa, 0x0a, 0xfc, 0xab, 0x7c, 0x7d, 0xe3, 0x2f, 0x44,
	0xd9, 0xfe, 0xd6, 0xad, 0xe0, 0x72, 0x44, 0x7d, 0xdd, 0xd4, 0x25, 0xc6, 0x7b, 0x23, 0x97, 0x8f,
	0xb0, 0xfc, 0x1e, 0x7d, 0x50, 0xbe, 0xbd, 0x38, 0x88, 0x0f, 0xde, 0xbd, 0xb6, 0xd9, 0x37, 0xd8,
	0xbc, 0x62, 0xb6, 0xa3, 0xe5, 0x78, 0xd8, 0xae, 0xe9, 0x7b, 0x3c, 0x4d, 0x5f, 0xe4, 0x17, 0xbf,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x48, 0xc0, 0x5f, 0x53, 0xac, 0x05, 0x00, 0x00,
}
